[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About Me",
    "section": "",
    "text": "My name is Wei Lun and I am currently a full time student at SMU MITB."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "The code chunk below uses p_load() of pacman package to check if tidyverse packages were installed in the computer. If they were, they will be launched into R.\n\npacman::p_load(tidyverse)\n\n\n\n\n\nexam_data <- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#simple-bar-chart",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#simple-bar-chart",
    "title": "Hands-on Exercise 1",
    "section": "Simple Bar Chart",
    "text": "Simple Bar Chart\n\nggplot(data = exam_data,\n       aes(x = RACE)) +\n  geom_bar()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#trellis-boxplot",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#trellis-boxplot",
    "title": "Hands-on Exercise 1",
    "section": "Trellis Boxplot",
    "text": "Trellis Boxplot\n\nggplot(data=exam_data,\n       aes(y = MATHS, x= CLASS)) +\n  geom_boxplot() +\n  facet_wrap(~ GENDER)\n\n\n\n\n\nggplot(data=exam_data,\n       aes(y = MATHS, x= CLASS)) +\n  geom_boxplot() +\n  facet_wrap(~ GENDER, ncol=1, strip.position=\"right\")\n\n\n\n\n\nggplot(data=exam_data,\n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  facet_grid(GENDER ~ CLASS)"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex03/In-Class_Ex03.html",
    "href": "In-Class_Ex/In-Class_Ex03/In-Class_Ex03.html",
    "title": "In-Class_Ex03",
    "section": "",
    "text": "Installing and loading R packages\nTwo packages will be installed and loaded. They are tidyverse and ggiraph.\n\n#pacman::p_load(ggiralph, tidyverse)\n#Change to library because of error when running pacman::p_load(ggiralph)\nlibrary(ggiraph)\nlibrary(tidyverse)\n\nImporting Data\n\nexam_data <- read_csv(\"data/Exam_data.csv\")\n\n\np <- ggplot(data = exam_data,\n       aes(x = MATHS)) +\ngeom_dotplot_interactive(\n    aes(tooltip = ID),\n    stackgroups = TRUE, \n    binwidth = 1, \n    method = \"histodot\") +\n  scale_y_continuous(NULL, \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618\n)"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex04/In-Class_Ex04.html",
    "href": "In-Class_Ex/In-Class_Ex04/In-Class_Ex04.html",
    "title": "In-Class Excerise 4",
    "section": "",
    "text": "pacman::p_load(plotly, DT, patchwork, ggstatsplot, readxl, performance, parameters, see, ggdist, tidyverse)"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex04/In-Class_Ex04.html#collinearity",
    "href": "In-Class_Ex/In-Class_Ex04/In-Class_Ex04.html#collinearity",
    "title": "In-Class Excerise 4",
    "section": "Collinearity",
    "text": "Collinearity\n\ncheck_c <- check_collinearity(model)\nplot(check_c)"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex04/In-Class_Ex04.html#normality-assumption-test",
    "href": "In-Class_Ex/In-Class_Ex04/In-Class_Ex04.html#normality-assumption-test",
    "title": "In-Class Excerise 4",
    "section": "Normality Assumption Test",
    "text": "Normality Assumption Test\n\nmodel1 <- lm(Price ~ Age_08_04 + KM + \n              Weight + Guarantee_Period,\n             data = car_resale)\n\n\ncheck_n <- check_normality(model1)\nplot(check_n)"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex04/In-Class_Ex04.html#homogeneity-of-variances-test",
    "href": "In-Class_Ex/In-Class_Ex04/In-Class_Ex04.html#homogeneity-of-variances-test",
    "title": "In-Class Excerise 4",
    "section": "Homogeneity of Variances Test",
    "text": "Homogeneity of Variances Test\n\ncheck_h <- check_heteroscedasticity(model1)\nplot(check_h)"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex04/In-Class_Ex04.html#complete-test",
    "href": "In-Class_Ex/In-Class_Ex04/In-Class_Ex04.html#complete-test",
    "title": "In-Class Excerise 4",
    "section": "Complete Test",
    "text": "Complete Test\n\ncheck_model(model1)"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex04/In-Class_Ex04.html#see-method",
    "href": "In-Class_Ex/In-Class_Ex04/In-Class_Ex04.html#see-method",
    "title": "In-Class Excerise 4",
    "section": "see method",
    "text": "see method\n\nplot(parameters(model1))"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex04/In-Class_Ex04.html#ggstatsplot-method",
    "href": "In-Class_Ex/In-Class_Ex04/In-Class_Ex04.html#ggstatsplot-method",
    "title": "In-Class Excerise 4",
    "section": "ggstatsplot method",
    "text": "ggstatsplot method\n\nggcoefstats(model1, \n            output = \"plot\")"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex04/In-Class_Ex04.html#ggplot2-methods",
    "href": "In-Class_Ex/In-Class_Ex04/In-Class_Ex04.html#ggplot2-methods",
    "title": "In-Class Excerise 4",
    "section": "ggplot2 methods",
    "text": "ggplot2 methods\n\nggplot(my_sum) +\n  geom_errorbar(\n    aes(x=RACE, \n        ymin=mean-se, \n        ymax=mean+se), \n    width=0.2, \n    colour=\"black\", \n    alpha=0.9, \n    linewidth=0.5) +\n  geom_point(aes\n           (x=RACE, \n            y=mean), \n           stat=\"identity\", \n           color=\"red\",\n           size = 1.5,\n           alpha=1) +\n  ggtitle(\"Standard error of mean maths score by rac\")"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Wei Lun’s Visual Analytics Site",
    "section": "",
    "text": "This website is a portfolio of my work created as part of ISSS608 Visual Analytics and Applications course requirement.\nHope you enjoy the website!"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html",
    "title": "Take-home Exercise 1",
    "section": "",
    "text": "1. Overview\n\nAge-sex pyramid, also known as population pyramid, is an analytical visualization commonly used to reveal the distribution of a population by age group and gender. This take-home exercise aims to reveal the demographic structure in nine selected planning area of Singapore by using the population pyramid charts.\nThe dataset containing the demographics of Singapore residents for June 2022 was obtained from Department of Statistics. The data was then imported into Tableau desktop for data processing and visualisation.\n\n\n2. Design Sketch\n\n\n\n\n3. Data Wrangling\n\n3.1 Re-group AG into AG (10years)\nFrom the age group distribution in Singapore population, it can be observed that there is a big number of 19 bins where each bin covers an age range of 5 years. The bins may become narrow or compressed when fitted into a small-multiple plot which makes identifying of meaningful patterns challenging. Therefore, we re-group the age groups to cover a range of 10years to reduce the number of bins displayed.\n\n3.2 Creating male and female population variables\nA single population pyramid is made by two age group distributions for both genders in a population. The dataset used currently combines the population for both genders. Hence, two new variables (‘Male Pop’ & ‘Female Pop’) are created using ‘Calcuated Field’ to represent either male or female populations only.\n\n\n\n4. Population Pyramid\n\n4.1 Selection of 9 planning areas\nIn this exercise, we will be studying the demographics structure in 9 planning areas with the largest populations. Large populations are chosen to ensure that we can cover as many Singaporean residents as possible for the study. We can identify these areas using the population distribution by planning areas below.\n\n4.2 Final visualization\nThe 9 population pyramids are displayed in a single view using trellis display as shown below. This chart is also published on Tableau Public.\n\n\n\n5. Observations\n\nThe following are observations revealed by the above analytical visualization:\n\nAll nine planning areas have narrower base compared to the body which shows low birth rate as there are fewer number of children than adults.\nAll nine planning areas have almost symmetrical halves which suggests almost equal gender ratio.\nPunggol and Sengkang have considerable higher number of young children and teenagers (0 to 19 age groups) than other areas, likely due to the development of new flats in these areas.\nIndents at 30 to 49 age groups for Woodlands, Tampines and Choa Chu Kang signals an outflow of working adults out of these areas.\nBulge at 30 to 49 age groups for Punggol and Sengkang indicates an influx of working adults into these two planning areas.\nBedok and Tampines have the largest number of population of 50 to 69 age groups which suggests characteristics of mature estates.\nYishun has an overall barrel like structure compared to others suggesting a more balanced ratio of the young, middle-aged and the elderlies.\nFemales had a longer life expectancy than males in these areas as the female population are larger than male population for age group above 80 years old.\nAll nine planning areas have a distinct drop for 80 to 89 age group suggesting life expectancy to be in this range.\n\n\n\n6. Worksheet vs Dashboard\n\nWe can build a trellis display for nine population pyramids using multiple worksheets and compile into a dashboard (as shown above) or using a single worksheet (as shown below).\n\nWe will compare some advantages and disadvantages of each method.\nTrellis display (horizontal) in Worksheet\nAdvantages:\ni) Less steps required to build and has automated chart fitting and labeling.\nii) Easier to compare across the same age groups.\nDisadvantages:\ni) Requires several additional fields and complex equations to build a 3x3 grid.\nii) Pyramids are compressed to fit into the same display and could be misleading.\nTrellis display in Dashboard\nAdvantages:\ni) Larger space for each pyramids so they are not compressed.\nii) Able to custom layout to desired design without any coding.\nDisadvantages:\ni) Multiple worksheet adjustments are required for any changes to the pyramids.\nAfter considering the pros and cons, trellis display in dashboard is better suited for this exercise.\n\n\n7. Step-by-Step Instructions\n\n6.1 Data preparation\n\n\n\n\n\n\n\n\nNo.\nStep\nIllustration\n\n\n\n\n1.\nDownload csv file from Singstat website given in Section 1. Load the respopagesextod2022.csv file into Tableau Desktop by clicking ‘File’ followed by ‘Open’.\n\n\n\n2.\nClick on the drop-down arrow for ‘AG’, hover over ‘Create’ and click on ‘Group’. Create age groups in interval of 10 by grouping a pair of age groups with 5 years interval. Type ‘AG (10years)’ in ‘Field Name’ when new grouping is done.\n\n\n\n3.\nGo to ‘Analysis’ and click on ‘Create Calculated Field’. Overwrite ‘Calculation1’ with ‘Male Pop’ and typed in the following formula: IF [Sex] = “Males” THEN [Pop] END\nRepeat this step for ‘Female Pop’ with the following formula: IF [Sex] = “Females” THEN [Pop] END\n\n\n\n\n6.2 Creating population pyramids for 9 planning areas in dashboard\n\n\n\n\n\n\n\n\nNo.\nStep\nIllustration\n\n\n\n\n1.\nCreate a new worksheet ‘Pyramid (3Top)’. Click and drag ‘PA’, ‘Male Pop’ & ‘Female Pop’ from Data pane to Columns. Add ‘AG(10yrs)’ to Rows. Ensure summation of ‘Male Pop’ and ‘Female Pop’ are added.\n\n\n\n2.\nClick the dropdown arrow on PA beside ‘Columns’ and select ‘Filter’. Uncheck all except the 3 selected planning area. Click ‘Ok’ once done.\nHide field label for row ‘AG (10yrs) and column ’PA’.\n\n\n\n3.\nHover over AG(10yrs) on the chart. Click on the ‘AZ’ icon and sort the rows in descending order (0 to 9 at the bottom & 90 and over at the top)\nRight-click on one of the ‘Male Pop’ x-axis and select ‘Edit Axis’. Under Range, select ‘Fixed’ and set 0 as min and 30,000 as max. Under Scale, checked ‘Reversed’. Under Axis Titles, remove the title ‘Male Pop’. Close window once done.\nRight-click on one of the ‘Female Pop’ x-axis. Repeat the same steps as above for Range and Axis Titles only.\nUnder ‘Marks’, click on ‘Color’ under ‘Sum(Female Pop)’ ribbon. Select pink color to represent female population.\nSelect ‘Entire View’ under ‘Fit’. Your diagram should look similar to the diagram on the right.\n\n\n\n4.\nDuplicate ‘Pyramid (3Top)’ and renamed worksheets as ‘Pyramid (3Mid)’ and ‘Pyramid (3Btm)’. In new workshops, update ‘PA’ filter such that the remaining 6 planning areas are all included.\n\n\n\n5.\nClick on ‘New Dashboard’ at the bottom and rename it as ‘Dashboard (Trellis)’.\nUse floating objects and create a placeholders as shown in the diagram on the right.\n\n\n\n6.\nHold down shift and drag ‘Pyramid(3Top)’, ‘Pyramid (3Mid)’ and ‘Pyramid (3Btm)’ into the respective placeholders. Update the chart title and axis titles accordingly. The final diagram should look like the one on the right.\n\n\n\n\n6.3 Creating population pyramids for 9 planning areas in a single worksheet\n\n\n\n\n\n\n\n\nNo.\nStep\nIllustration\n\n\n\n\n1.\nCreate a new worksheet ‘Worksheet (Trellis)’. Click and drag ‘PA’, ‘Male Pop’ & ‘Female Pop’ from Data pane to Columns. Add ‘AG(10yrs)’ to Rows.\nClick the dropdown arrow on PA beside ‘Columns’ and select ‘Filter’. Uncheck all except the 9 selected planning area. Click ‘Ok’ once done.\n\n\n\n2.\nRepeat the same step as Section 6.2 Step 3, except use ‘Fit Width’. The diagram should look like the one on the right."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html",
    "title": "Take-home Exercise 2",
    "section": "",
    "text": "1. Overview\n\nIn this take-home exercise, the task is to critique an original data visualisation of demographic structure for nine planning area in Singapore and create an alternate improved design by applying design principles and best practices.\nThe dataset used in this exercise is Singapore Residents by Planning Area / Subzone, Age Group, Sex and Type of Dwelling, june 2022. It is available at Department of Statistics, Singapore.\n\n\n2. Original Visualisation\n\nThe original visualisation contains three sections: (i) overall population pyramid (a.k.a age-sex pyramid), (ii) population pyramid by planning area (PA) and (iii) population pyramid by subzone. The live dashboard can be found in Tableau Public.\n\n\n\n\n\n\n\nOverall Population Pyramid\n\nPopulation Pyramid by Subzone\n\nPopulation Pyramid by Planning Area\n\n\n\n\n2.1 Clarity\na. Incomprehensible dashboard title: the term ‘Age Pyramid: Sex Pattern’ does not have the same meaning as age-sex pyramid. Readers might be confused with what the visualisations are trying to show.\nb. Chart titles have no lead-in or call-outs: It is good that reader is able to understand the reference country and time period from the chart title. However, it can be further improved with lead-in and call-outs to also explain the key trend or insights.\nc. Y-axis ticker labels are confusing: There is an unknown age group called ‘Null’ and the age range of each age group is represented using a solo number. Readers are not able to decipher what ‘Null’ age group, the age range of each group and whether the age group ‘80’ refers to 80 to 90 years old or 80years old and above.\nd. Source of data is missing: Missing recognition of data source could let the data visualisation lose credibility.\ne. Excess visulisation did not meet business intent: Excessive information is provided in this dashboard. Plotting of overall population pyramid, subzone population pyramids as well as all planning area population pyramids may lead readers away from the business intent of studying only nine planning areas.\nf. Instructions are provided on overview page: Readers are guided on how to use the interactive dashboard. This reduces confusion on how to use the interactive dashboard.\n2.2 Aesthetics\na. Congested and repeated x-axis labels: For planning areas and subzone pages, labels for the x-axis are clear but congested. Legend and color fill can be used to replace the congested labels and the need for repeated labels.\nb. X-axis between plots are not distinct: For planning areas and subzone pages, the x-axis looks like they run continuously and there are two ‘0K’ labels for the same plot. This makes it difficult to locate the axis.\nc. Visualisations do not fit into a single window: For planning areas and subzone pages, it is difficult to view and make comparison between population pyramids of different areas. The blanks in the charts does not value add to the visualisations.\nd. Missing horizontal grid lines: For planning areas and subzone pages, minor horizontal grid lines can be added for readers to read and compare the same age group across two areas.\nd. Chart title and x-axis title at the same level: On the overview page, readers may not be able to find the chart title for the bottom chart because it is on the same level as x-axis title.\ne. Dual y-axis: On the overview page, the y-axis in the middle for the bottom chart does not value-add. It would be able to remove it and reference the y-axis on the left.\n\n\n3. Alternative Visualisation\n3.1 Proposed design sketch\nSince the task is to study the demographic structures of nine planning areas, the proposed design do not need the overall population pyramid and the population pyramid by subzone since they provide excess information that might distract the readers from what is important. Hence, the proposed design will only contain one chart which is the population pyramids of nine planning areas.\n\n3.1 Clarity\na. Meaningful chart titles: The main title will be “Discovering Population Pyramid of 9 Most Populated Planning Areas in Singapore, June 2022” so the readers are able to understand the context of the visualisation immediately. The chart also have subtitle and commentary to provide additional clarity on the context and key observation.\nb. Right sized content: The visualisation do not contain excessive information that could distract the readers as explained at the start of this section. Also, only nine instead of all planning areas are plotted so readers know immediately which areas are the targets of comparison.\nc. Clear axes labels: Both axes titles are properly labelled so the readers know what each chart measures. For y-axis, the age groups are ordered from youngest at the bottom to oldest at the top per typical convention so readers can digest this information easily. For x-axis, there is no labels for male and female populations as they will be colour coded.\nd. Inclusion of data source at the bottom of the chart will provide credibility to the visualisation.\n3.2 Aesthetic\na. Use of legend and colour labels: The color shading and legend of the graph is used to identify the gender in each population pyramid. The intention of the colour is to help reader easily identify the gender directly from the chart without referring to the x-axis. It also helps to reduce congestion at the x-axis.\nb. Clear demarcation and gridlines: The charts do not share a continuous x-axis so readers can easily differentiate the axes for different planning area charts. Grid lines are also added so readers are able to make horizontal and vertical comparisons with ease.\nc. Smaller scale of x-axis major ticks: The scale of x-axis major tick marks are reduced to 5000 to show finer details and allow readers to identify smaller differences easily.\nd. Readable chart size: The size of the charts in the visualisation is configured such that all the bars within the population pyramids are readable and does not feel congested.\n\n\n4. Load Libraries and Dataset\nThe following code chunk is used to install the required R packages and load them onto R environment.\n\npacman::p_load(patchwork, ggthemes, hrbrthemes, ggrepel, plotly, tidyverse)\n\nNext, read_csv() from readr as part of tidyverse package is used to import the source file which is in csv file format.\n\n#To load dataset from .csv file\npopdata <- read_csv(\"Data/respopagesextod2022.csv\") \n\nRows: 100928 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (5): PA, SZ, AG, Sex, TOD\ndbl (2): Pop, Time\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n\n5. Data Preparation\n5.1 Compute frequency count by Age Group, Sex and Planning Area\nFrequency count of the total population is computed based on planning area, sex and age group. As shown in code chunk below, groupby() is used to group data by defined parameters while summarise() counts the number of residents.\n\n#Summing residents based on planning area, age group and sex\npopdata <- popdata %>%\n                group_by(`PA`,`AG`,`Sex`) %>%\n                summarise('Count'= sum(`Pop`)) %>%\n                ungroup()\n\n`summarise()` has grouped output by 'PA', 'AG'. You can override using the\n`.groups` argument.\n\n\n5.2 Transform population data for males\nTo plot the male population on the left axis of the population pyramid, ‘Pop’ values of Males are converted to negative values using the ifelse() function in code chunk below.\n\n#Create variable for chart purposes\npopdata_plot <- popdata\n\n#If Sex = 'Males', population value becomes negative else remains unchanged\npopdata_plot$Count = ifelse(popdata_plot$Sex == 'Males',\n                     yes = -popdata_plot$Count,\n                     no = popdata_plot$Count\n                     )\n\n\n\n6. Visualisation\n6.1 Finding the top 9 most populated planning area\nAs the requirement is to study the demographic structures of nine planning area, we will be choosing the nine most populated planning area.\nThe code chunk below consists of three main steps to obtain our target areas: First, the frequency count is computed based on planning area only using groupby() then the list is sorted from largest to smallest count using arrange(desc()). The final step is to pick out the top nine planning area in the list, which are also the nine most populated areas using top_n().\n\n#This code chunk does the following:\n#Step1) Compute resident count by PA and sort count in descending order\n#Step2) Removes all but top 9 most populated PA\npopdata_top9 <- popdata %>%\n                  group_by(`PA`) %>%\n                  summarise('total'= sum(`Count`)) %>%        #Step1\n                  arrange(desc(`total`)) %>%                 \n                  top_n(9,wt=total) %>%                       #Step2\n                  ungroup()\n\n6.2 Trellis display of population pyramids for top 9 most populated planning area of Singapore\nFor this dataset, the age group is sorted alphanumerically which would not make sense for the population pyramid axis. Hence, we need to assign the correct order for this categorical variable.\nThis can be done by changing the order for age group variable using factor() with the factor levels.\n\n#Define the correct order for AG\nag_order <- c(\"0_to_4\", \"5_to_9\", \"10_to_14\", \"15_to_19\", \n                 \"20_to_24\", \"25_to_29\", \"30_to_34\", \"35_to_39\", \n                 \"40_to_44\", \"45_to_49\", \"50_to_54\", \"55_to_59\", \n                 \"60_to_64\", \"65_to_69\", \"70_to_74\", \"75_to_79\", \n                 \"80_to_84\", \"85_to_89\", \"90_and_over\")\n\n#Update order for AG column for popdata_plot dataframe\npopdata_plot$AG <- factor (popdata_plot$AG, level = ag_order)\n\nAn initial static plot is plotted using ggplot() and geom_col() from ggplot2 package. Then using facet_wrap, the population pyramids of 9 most populated planning areas are put into a 3 by 3 grid.\nscale_x_continuous() is used to configure the x-axis markers and ticker labels while labs() is used to add title and subtitle on top of the chart. Last but not least, the axis titles are updated using ylab() and xlab().\n\n#Using ggplot and facet_wrap to plot a trellis diagram of 9 population pyramid\np <- ggplot(subset(popdata_plot, PA %in% c(popdata_top9$PA)),\n        aes(x = Count, y= AG, fill = Sex)) +\n    geom_col() +\n    facet_wrap( ~PA, nrow = 3, ncol = 3) +\n    scale_x_continuous(limits = c(-15000,15000),              #format x-axis\n                       breaks = seq(-15000, 15000, 5000),\n                       labels = paste0(as.character(c(seq(15, 0, -5),\n                                                      seq(5, 15, 5))),\"K\"))\n\n#Formatting axis and adding chart title and subtitle\np + labs(title=\"Discovering Population Pyramid of 9 Most Populated Planning Areas in Singapore, June 2022\", \n         subtitle=\"Distinct differences in demographic structures of north-east vs west planning areas of Singapore\",\n         caption=\"Source: Department of Statistics, Singapore (SingStat)\") +\n  theme(plot.title = element_text(color = \"black\", size = 20, face = \"bold\")) +\n  ylab(\"Age Groups\") +\n  xlab(\"Population\") +  \n  theme_bw()        \n\n\n\n\n\n\n7. Reflection\nMy main challenge when attempting this take-home exercise is not being proficient in using the correct R packages. With suitable packages and functions, more analytical layers can be applied to the chart object to better serve the user needs. For example, I would like to add relevant statistical parameters such as mean male and female population of the nine planning areas for each age group as a vertical line in each nine plots to provide some ease of comparison for the readers.\nFuture work can be done to enhance the population pyramid chart. An example is using plotly package, where a tooltip can help users identify the stats of each bar in the pyramid without labelling all the charts."
  }
]