---
title: "In-Class Excerise 4"
date: "February 4, 2023"
date-modified: "`r Sys.Date()`"
format: html
execute: 
  echo: true
  eval: true
  warning: false
editor: visual
---

```{r}
pacman::p_load(plotly, DT, patchwork, ggstatsplot, readxl, performance, parameters, see, ggdist, tidyverse)
```

```{r}
exam_data <- read_csv("data/Exam_data.csv")
```

# plotly

```{r}
plot_ly(data = exam_data, 
        x = ~ENGLISH, 
        y = ~MATHS, 
        color = ~RACE) #<<
```

```{r}
p <- ggplot(data=exam_data, 
            aes(x = MATHS,
                y = ENGLISH)) +
  geom_point(dotsize = 1) +
  coord_cartesian(xlim=c(0,100),
                  ylim=c(0,100))
ggplotly(p) #<<
```

# ggstatsplot

```{r}
ggbetweenstats(
  data = exam_data,
  x = RACE, 
  y = ENGLISH,
  type = "p",
  mean.ci = TRUE, 
  pairwise.comparisons = TRUE, 
  pairwise.display = "s",
  p.adjust.method = "fdr",
  messages = FALSE
)
```

```{r}
ggscatterstats(
  data = exam_data,
  x = MATHS,
  y = ENGLISH,
  marginal = TRUE,
  )
```

# readxl

```{r}
#Second parameter is to specify required worksheet name
car_resale <- read_xls("data/ToyotaCorolla.xls", 
                       "data")
```

# Multiple Regression Model

```{r}
model <- lm(Price ~ Age_08_04 + Mfg_Year + KM + 
              Weight + Guarantee_Period, data = car_resale)
```

## Collinearity

```{r}
check_c <- check_collinearity(model)
plot(check_c)
```

## Normality Assumption Test

```{r}
model1 <- lm(Price ~ Age_08_04 + KM + 
              Weight + Guarantee_Period,
             data = car_resale)
```

```{r}
check_n <- check_normality(model1)
plot(check_n)
```

## Homogeneity of Variances Test

```{r}
check_h <- check_heteroscedasticity(model1)
plot(check_h)
```

## Complete Test

```{r}
#| fig-height: 10
#| fig-width: 12
check_model(model1)
```

# Visualising Regression Parameters

## see method

```{r}
plot(parameters(model1))
```

## ggstatsplot method

```{r}
ggcoefstats(model1, 
            output = "plot")
```

# Visualising Uncertainty of Point Estimates

```{r}
my_sum <- exam_data %>%
  group_by(RACE) %>%
  summarise(
    n=n(),
    mean=mean(MATHS),
    sd=sd(MATHS)
    ) %>%
  mutate(se=sd/sqrt(n-1))
```

## ggplot2 methods

```{r}
ggplot(my_sum) +
  geom_errorbar(
    aes(x=RACE, 
        ymin=mean-se, 
        ymax=mean+se), 
    width=0.2, 
    colour="black", 
    alpha=0.9, 
    linewidth=0.5) +
  geom_point(aes
           (x=RACE, 
            y=mean), 
           stat="identity", 
           color="red",
           size = 1.5,
           alpha=1) +
  ggtitle("Standard error of mean maths score by rac")
```
